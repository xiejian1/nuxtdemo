<template>
	<footer>
		 <div class="uint-types">
		 	<div class="uint-type" v-for="(info,index) in sortedUintTypes" :key="index" >
		 	 <div class="uint-type_content">
		 	 	<h6>{{info.name}}</h6>
		 	 	<p class="uint" v-for="(org,index) in info.uintItemRespVOList" :key="index">
		 	 		<span>{{org.name}}</span>
		 	 	</p>
		 	 </div>	
		 	</div>
		 </div>
		 <div class="friend-links">
		 	<div class="friend-title"></div>
		 	<ul class="link-content">
		 		<li v-for="(link,index) in sortedFriendLinks" :key="index" class="link-item">
		 			<a :href="link.url||'#'" target="blank">{{link.text||link.url}}</a>
		 		</li>
		 	</ul>
		 </div>
		 <div class="copyright" v-show="false">
		 	<p>
		 	   Powered by <a href="https://github.com/cdtft" target="blank">@cdtft</a>,<a href="https://github.com/lzq4047" target="blank">@lzq4047</a>,<a href="https://github.com/xiejian1" target="blank">@xiejian1</a>
             </p>
		 </div>
	</footer>
</template>
<script type="text/javascript">
	export default {
		props:{
			unit:{
				type:Array,
				default:()=>[]
			},
            friendLinks:{
            	type:Array,
            	default:()=>[]
            }
		}
		data() {
			return {
               
			}
		}.
		methods:{

		},
		computed:{
			sortedUintTypes:function() {
				const sortedTypes = this.uint.sort(()=>
					prev.indexNum = cur.indexNum)
				const sortedUintTypes = sortedTypes.map(type=>{
					return Object.assign({},type,{
						unitItemRespVOList:type.unitItemRespVOList.sort((prev,cur)=>prev.index - cur.indexNum)
					})
				})
				return sortedTypes
			}
            sortedFriendLinks:function(){
            	return this.friendLinks.sort((prev,cur)=>prev.indexNum-cur.indexNum)
            }
		},
		createsd() {

		}
	}
</script>
<style type="text/css">
	footer{
		background: $464857;
	}
	.uint-types{
		display: flex;
		justify-content: center;
		align-items: baseline;
		font-size: 16px;
		color: #fff;
	}
	.uint-type{
		padding: 20px 60px;
		text-align: center;
		height: 100%;
		h6{
			width: 150px;
			padding-bottom: 5px;
			margin: 0 0 10px;
			font-size: 26px;
			line-height: 30px;
			border-bottom: 2px solid #fff;
			font-family: 'STXingkai', 'Pacifico', cursive;
		}
	}
	.uint-type_content{
		display: flex;
		justify-content: flex-start;
		flex-direction: column;
		align-items: center;
		.uint{
			margin: 5px 0;
		}
	}
	.friend-links{
		display: flex;
		justify-content: center;
		align-items: center;
		padding:10px 20px;
		background-color: #fff;
		font-size: 13px;
	}
	.link-content{
		margin: 0;
		padding-left: 0
	}
	.link-item{
		display: inline-block;
		padding: 0 15px;
		color: #777;
		& + .link-item{
			border-left: 2px solid #ccc;
		}
		a{
			color: inherit;
			text-decoration: none;
		}
	}
	.copyright{
		padding: 0 20px 10px;
		text-align: center;
		background-color: #fff;
		font-size: 13px;
		p{
			margin: 0
		}
	}
</style>