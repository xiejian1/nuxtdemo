<template>
	<div>
		<header>
			<div @click="$router.push('/')" class="logo">
				<img :src="websiteInfo.logoUrl" height="150" alt="">
				<div class="title">
					<h1>
						<span>{{websiteInfo.titleName}}</span>
						<small>
							<span>{{websiteInfo.location}}</span>
							<span>{{websiteInfo.time}}</span>
						</small>
					</h1>
                    <p>{{websiteInfo.subTitle}}</p>
				</div>
			</div>
			<div class="profile">
				<template v-if="isLogin">
					<user-profile></user-profile>
				</template>
				<template v-else>
					<el-button class="hvr-sink header-btn" @click="$router.push('/logi')" type="primary">登录</el-button>
					<el-button class="hvr-sink header-btn" type="primary" @click="$router.push('/register')">注册</el-button>
				</template>
			</div>
		</header>
        <nav>
        	<el-menu :default-active="activeIndex" calss="menu" mode="horizontal" router>
        		<el-menu-item class="menu-item" key="index" index="/">首页</el-menu-item>
        		<el-menu-item class="menu-item" v-for="menu in sortedMenus" :kye="menu.id" :index="`/channels?id${menu.id}`">{{menu.name}}</el-menu-item>
        		<el-menu-item class="menu-item" key="admin" index="/admin/sidenavContent" v-if="userRole==='admin'">系统管理</el-menu-item>
        	</el-menu>
        </nav>
	</div>
</template>
<script type="text/javascript">
	import UserProfile from './UserProfiele.vue'
	export default{
		data(){
			return {
              idLogin:false,
              userRole:'normal',
              activeIndex:'',
              menus:[]
			}
		},
		computed:{
			sortedMenus() {
				return this.menus.sort((prev,cur)=>{
		           prev.indexNum-cur.indexNum
				})
			}
		},
		props:{
			wensiteInfo:{
				type:Object,
				default:()=>{
					return {}
				}
			}
		},
		methods:{
			async fetchMenus(){
				const result = await this.$http.get('/api/menu/onelevel')
				if(result.data.code>=200&&result.data.code<300){
					this.menus = result.data.data
				}
			},
            async checkLoginStatus(){
            	const result = await this.$http.get('/api/token')
            	if(result.data.code>=200&&result.data.code<300){
            		this.isLogin = true
            		this.userRole - result.data.data[0]
            	}
            },
            gotoGatherInfo(){
            	if(!this.websiteInfo.enableRegister){
            		this.$message.info('您好,会议注册时间以截至，注册通道已经关闭')
            	}else if(!this.isLogin){
            		this.$messge.warnning('您还未登录，请先登录')
            		setTimeout(()=>{
                       this.$router.push('/login')
            		},1000)
            	}else{
            		this.$router.push('/gather')
            	}
            }
		},
		created(){
			this.fetchMenus()
		},
		mounted(){
			this.checkLoginStatus()
		},
		components:{
			UserProfiele
		}
	}
</script>
<style type="text/css">
	header{
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 15px 30px
	}
	.logo{
		display: flex;
		align-items: center;
		text-decoration: none;
		cursor: pointer;
	    img{
	    	height: 80px
	    }
	    .title{
		margin-left: 15px;

		text-align: left;
		color: #3c3ca3;
		p{
			margin: 0;
			padding-left: 10px;
			font-size: 16px;
		}
		h1{
			margin: 0;
			display: flex;
			align-items: center;
			height: 40px;
			font-size: 36px;
			color: #aa1da2;
			font-family: 'STXingkai','Pacifio',cursive;
			small{
				display: flex;
				flex-direction: column;
				justify-content: flex-start;
				margin: 22px 0 0px 20px;
				text-align: center;
				font-size: 19px;
				color: #1e71ba;
				font-weight: bold;
				line-height: 33px;
				font-family: SimHei;
				span{
					line-height: 1;
					margin-right: 10px;
				}
			}
		}
	}
	.header-btn{
		border-radius: 0;
		padding: 8px 20px;
		margin-right: 10px;
	}
	.menu{
		padding: 0 20px;
		background-color: rgb(34,69,153);
		box-shadow: 0 1px 4px 0 rbga(0,0,0,0.50);
		border-radius: 0;
		border-bottom: 0;
	}
	.menu-item{
		height: 45px;
		line-height: 45px;
		font-size: 20px;
	}
	.menu /deep/ .el-menu-item, .menu /deep/ .el-submenu_title,
	.menu /deep/ .el-menu--horizontal .el-submenu .el-menu-item.is-active,.menu /deep/ .el-menu-item.is-active{
		color: #fff;
	}
	.menu /deep/ .el-menu--horizontal .el-submenu .el-menu-item.is-active,
.menu /deep/ .el-menu-item.is-active{
  background-color: rgb(51, 124, 177);
}
.menu.el-menu--horizontal .el-menu-item:hover, .menu.el-menu--horizontal .el-submenu__title:hover{
  background-color: rgb(51, 124, 177);
}
</style>